name: Deploy to AWS VM

on:
  push:
    branches:
      - main # Trigger only on main branch updates

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Debug Directory Structure
      run: |
        echo "Listing all files in the workspace:"
        ls -R # Check if Backend and Frontend directories exist with package-lock.json

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # Install Backend Dependencies
    - name: Install Backend Dependencies
      run: |
        echo "Installing backend dependencies..."
        cd Backend
        ls -l package-lock.json # Confirm package-lock.json exists
        npm ci # Use package-lock.json for deterministic installs

    # Install Frontend Dependencies
    - name: Install Frontend Dependencies
      run: |
        echo "Installing frontend dependencies..."
        cd Frontend
        ls -l package-lock.json # Confirm package-lock.json exists
        npm ci # Use package-lock.json for deterministic installs

    # Build Frontend
    - name: Build Frontend
      working-directory: ./Frontend
      run: npm run build

    # Deploy to AWS VM
    - name: Deploy to AWS VM
      env:
        SSH_KEY: |
          yg3h043uCkqanLawuY+sLpgKr/t4/obaxFkm2ADqrcQ # Your test SSH private key
        HOST: 16.171.171.132
        USER: ubuntu
        BASE_URL: ${{ secrets.BASE_URL }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        echo "$SSH_KEY" > ssh_key.pem
        chmod 600 ssh_key.pem

        ssh -o StrictHostKeyChecking=no -i ssh_key.pem $USER@$HOST << 'EOF'
          mkdir -p ~/backend
          rsync -avz --delete ./Backend/ ~/backend
          cd ~/backend
          npm install

          echo "BASE_URL=$BASE_URL" > .env
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env
          echo "SUPABASE_KEY=$SUPABASE_KEY" >> .env

          pm2 restart all || pm2 start src/index.js --name backend

          mkdir -p ~/frontend
          rsync -avz --delete ./Frontend/dist/ ~/frontend/dist
          pm2 serve ~/frontend/dist --name frontend --port 3000 --spa
        EOF

        rm ssh_key.pem
